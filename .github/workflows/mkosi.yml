name: 'Build mkosi image'

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3 python3-pip python-is-python3 python3-pyelftools python3-pefile pipx \
            qemu-user-static binfmt-support bubblewrap dosfstools mtools uidmap debian-archive-keyring \
            binutils-aarch64-linux-gnu jq
      - run: |
          pipx ensurepath
          pipx install git+https://github.com/systemd/mkosi.git@v22
      - name: Setup mkosi cache
        id: mkosi-cache
        uses: actions/cache@v4
        with:
          path: mkosi.cache.tar.zst
          key: ${{ runner.os }}
      - name: Extract cache
        if: steps.mkosi-cache.outputs.cache-hit == 'true'
        run: sudo tar -xf mkosi.cache.tar.zst --use-compress-program zstdmt
      - name: Setup mkosi
        run: |
          touch mkosi.key mkosi.crt
          chmod 0600 mkosi.key mkosi.crt
          cat << EOF > mkosi.key
          ${{ secrets.MKOSI_KEY }}
          EOF
          cat << EOF > mkosi.crt
          ${{ secrets.MKOSI_CRT }}
          EOF
          echo -n ${{ github.ref_name }} > mkosi.version
          echo "OUTPUT_DIR=$(mkosi --json summary|jq -r '.Images[0].OutputDirectory')" >> $GITHUB_ENV
          echo "OUTPUT=$(mkosi --json summary|jq -r '.Images[0].Output')" >> $GITHUB_ENV
          echo "IMAGE_ID=$(mkosi --json summary|jq -r '.Images[0].ImageId')" >> $GITHUB_ENV
      - name: Build images
        run: mkosi build
      - name: Patch UKI name
        run: ./patch-uki-name.sh ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT }}.raw
      - name: Compress outputs
        run: xz -0 ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT }}*.raw ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT }}*.efi
      - name: Get previous release tag
        id: previous-release
        uses: sammcoe/get-previous-release-action@v1
      - name: Generate SHA256SUMS
        working-directory: ${{ env.OUTPUT_DIR }}
        run: |
          curl -L ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ env.PREVIOUS_RELEASE }}/SHA256SUMS \
            | sed -E 's@(\s+)([^\.])@\1../../download/${{ env.PREVIOUS_RELEASE }}/\2@' > SHA256SUMS
          sha256sum ${{ env.OUTPUT }}*.raw.xz ${{ env.OUTPUT }}*.efi.xz >> SHA256SUMS
        env:
          PREVIOUS_RELEASE: ${{ steps.previous-release.output.release }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT }}*.raw.xz
            ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT }}*.efi.xz
            ${{ env.OUTPUT_DIR }}/SHA256SUMS
      - name: Save cache
        run: sudo tar -cf mkosi.cache.tar.zst mkosi.cache --use-compress-program zstdmt
